name: Publish ghcr.io

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  release:
    types: [ published ]


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2


      # Load values from release.config
      # https://github.com/falti/dotenv-action
      - name: Load Release Config 
        id: dotenv
        uses: falti/dotenv-action@v0.2.7

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ${{ steps.dotenv.outputs.registry }}
          username: ${{ steps.dotenv.outputs.repo }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681
        with:
          images: ${{ steps.dotenv.outputs.registry }}/${{ steps.dotenv.outputs.repo }}/${{ steps.dotenv.outputs.project_name }}
          tags: |
            type=semver,pattern={{version}}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Dump env
        run: env | sort
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          STEPS: ${{ toJson(steps)}}
        run: | 
          echo "$GITHUB_CONTEXT" \
          echo "$STEPS"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.0

      # Update the charts with the values from .env and the current job
      - name: Package Chart
        env: 
          VERSION: ${{ steps.meta.outputs.version }}
          REPO: ${{ steps.dotenv.outputs.repo }}
          REGISTRY: ${{ steps.dotenv.outputs.registry }}/
          NAME: ${{ steps.dotenv.outputs.project_name }}
          HOST: ${{ steps.dotenv.outputs.project_host }}
        run: |
          sed -i "s/PROJECT_NAME/$NAME/g" chart/values.yaml 
          sed -i "s/REPO/$REPO/g" chart/values.yaml
          sed -i "s?PROJECT_HOST?$HOST?g" chart/values.yaml
          sed -i "s?REGISTRY?$REGISTRY?g" chart/values.yaml

          sed -i "s/PROJECT_NAME/$NAME/g" chart/Chart.yaml
          sed -i "s/RELEASE_VERSION/$VERSION/g" chart/Chart.yaml
          
          TMPDIR=/tmp/helm-package/$NAME-chart
          mkdir -p $TMPDIR
          mkdir -p charts/
          cp -r chart/* $TMPDIR

          helm package $TMPDIR -d charts/

      - name: Upload chart to release
        uses: skx/github-action-publish-binaries@master
        with:
          args: charts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Run chart-releaser
      #   uses: helm/chart-releaser-action@v1.2.0
      #   env:
      #     CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      

          
